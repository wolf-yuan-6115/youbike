---
import fullLocale from "./commonLocales";

interface Props {
  width?: string;
  height?: string;
  options?: Record<string, any>;
}

const {
  width = "100%",
  height = "400px",
  options = {},
} = Astro.props;

const locale = fullLocale.chart[Astro.currentLocale ?? "zh-TW"];
const serializedOptions = JSON.stringify(options);
const chartId = `chart-${Math.random().toString(36).substring(2, 11)}`;
---

<div
  id={chartId}
  class="echarts-container"
  style={`width: ${width}; height: ${height};`}
  data-options={serializedOptions}
>
  <noscript class="flex h-full place-items-center justify-center">
    <p class="text-gray-400">
      {locale["javascript"]}
    </p>
  </noscript>
</div>

<script>
  import { LineChart } from "echarts/charts";
  import {
    DataZoomComponent,
    DataZoomInsideComponent,
    GridComponent,
    TooltipComponent,
    VisualMapComponent,
  } from "echarts/components";
  import * as echarts from "echarts/core";
  import { SVGRenderer } from "echarts/renderers";

  echarts.use([
    LineChart,
    TooltipComponent,
    GridComponent,
    VisualMapComponent,
    DataZoomComponent,
    DataZoomInsideComponent,
    SVGRenderer,
  ]);

  const charts = new Map();

  function initializeChart(chartContainer) {
    if (!chartContainer || charts.has(chartContainer.id)) return;

    const chart = echarts.init(chartContainer, null, {
      renderer: "svg",
    });

    const options = JSON.parse(chartContainer.dataset.options);
    chart.setOption(options);

    charts.set(chartContainer.id, chart);

    const resizeHandler = () => {
      chart.resize();
    };

    window.addEventListener("resize", resizeHandler);

    chartContainer._resizeHandler = resizeHandler;
  }

  function initializeAllCharts() {
    const chartContainers = document.querySelectorAll(
      ".echarts-container",
    );
    chartContainers.forEach(initializeChart);
  }

  document.addEventListener("astro:page-load", initializeAllCharts);

  document.addEventListener("astro:before-preparation", () => {
    charts.forEach((chart, id) => {
      const container = document.getElementById(id);
      if (container && container._resizeHandler) {
        window.removeEventListener(
          "resize",
          container._resizeHandler,
        );
      }
      chart.dispose();
    });
    charts.clear();
  });
</script>
