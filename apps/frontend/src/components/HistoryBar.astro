---
import { type Tables } from "@lib/database.types";
import clsx from "clsx";
import { formatInTimeZone } from "date-fns-tz";

export interface Props {
  history: Tables<"history">;
}

const { history } = Astro.props;

const filledBlocks = Math.floor(
  (history.available / (history.available + history.empty)) * 30,
);

let backgroundColor = "";

if (history.available <= 5) {
  backgroundColor = "bg-red-400";
} else if (history.empty <= 3) {
  backgroundColor = "bg-yellow-400";
} else {
  backgroundColor = "bg-green-400";
}

const timezone =
  Astro.request.headers.get("cf-timezone") ?? "Asia/Taipei";
---

<div class="flex flex-col justify-between py-2 sm:flex-row">
  <div class="space-y-1.5">
    <p class="sm:text-sm">
      {
        formatInTimeZone(
          new Date(history.at),
          timezone,
          "yyyy/MM/dd HH:mm:ss",
        )
      }
    </p>
    <p class="text-xs text-gray-400">
      可借 {history.available} 台，{history.empty} 位可還
    </p>
  </div>

  <div
    class="my-2 inline-flex place-items-center justify-between gap-1.5 sm:my-0 [&>*]:h-8 [&>*]:w-2 [&>*]:rounded-full"
  >
    {
      [...Array(25).keys()].map((k) => (
        <div
          class={clsx(
            filledBlocks === 0
              ? "bg-red-400/20"
              : k + 1 <= filledBlocks
                ? backgroundColor
                : "bg-gray-500",
          )}
        />
      ))
    }
  </div>
</div>
